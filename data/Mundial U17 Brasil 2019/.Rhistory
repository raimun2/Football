### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup1$contestantId
stats$equipo <- contestant1
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,stats)
}
}
for(s in 1:(njugadoresv)){
#identifico jugador s
jugadors <- jugadoresvisita[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup2$contestantId
stats$equipo <- contestant2
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,stats)
}
}
data_partidolocal$local <- TRUE
data_partidovisita$local <- FALSE
#extraigo estadisticas de los equipos
data_partidos <- rbind.fill(data_partidos, data_partidolocal)
data_partidos <- rbind.fill(data_partidos, data_partidovisita)
}
save.image("data_procesada.RData")
devtools::install_github('jelagmil/soccergraphR', build_opts = c("--no-resave-data", "--no-manual"))
library(soccergraphR)
browseVignettes("soccergraphR")
#Para que se abra en el navegador:
browseVignettes("soccergraphR")
#Para que se abra en la pestaña de Help de RStudio:
vignette("my-vignette")
#Pon la ruta donde tengas instsalada la libreria en mi caso:
ruta_eventos<-c('C:/User/italo/Documents/R/win-library-3.5/library/soccergraphR/data/f24.xml')
df<-OptaXMLeventos(ruta_eventos)
#Pon la ruta donde tengas instsalada la libreria en mi caso:
ruta_eventos<-c('C:/User/italo/Documents/R/win-library/3.5/library/soccergraphR/data/f24.xml')
df<-OptaXMLeventos(ruta_eventos)
#Pon la ruta donde tengas instsalada la libreria en mi caso:
ruta_eventos<-c('C:/Users/italo/Documents/R/win-library/3.5/library/soccergraphR/data/f24.xml')
df<-OptaXMLeventos(ruta_eventos)
#Pon la ruta donde tengas instsalada la libreria en mi caso:
ruta_eventos<-c('C:/Users/italo/Documents/R/win-library/3.5/soccergraphR/data/f24.xml')
df<-OptaXMLeventos(ruta_eventos)
install.packages("C:/Users/italo/Downloads/reshape_0.8.8.zip", repos = NULL, type = "win.binary")
#Pon la ruta donde tengas instsalada la libreria en mi caso:
ruta_eventos<-c('C:/Users/italo/Documents/R/win-library/3.6/soccergraphR/data/f24.xml')
df<-OptaXMLeventos(ruta_eventos)
View(df)
#Pon la ruta donde tengas instsalada la libreria en mi caso:
ruta_pases1<-c('C:/Users/italo/Documents/R/win-library/3.6/soccergraphR/data/pass1.xml')
ruta_pases2<-c('C:/Users/italo/Documents/R/win-library/3.6/soccergraphR/data/pass2.xml')
df1<-OptaXMLpassmatrix(ruta_pases1)
df2<-OptaXMLpassmatrix(ruta_pases2)
View(df1)
#Se calcula el grafo para la tabla df1 teniendo en cuenta un número de pases superior a 4
OptaMAPmatrixpass(df1,4)
#Se calcula el grafo para la tabla df1 teniendo en cuenta un número de pases superior a 4
OptaMAPmatrixpass(df1,15)
#Se calcula el grafo para la tabla df1 teniendo en cuenta un número de pases superior a 4
OptaMAPmatrixpass(df1,20)
#Se calcula el grafo para la tabla df1 teniendo en cuenta un número de pases superior a 4
OptaMAPmatrixpass(df1,2)
#Pon la ruta donde tengas instsalada la libreria en mi caso:
ruta_eventos<-c('C:/Users/italo/Documents/R/win-library/3.6/soccergraphR/data/f24.xml')
df<-OptaXMLeventos(ruta_eventos)
OptaMAPcorner(df,1)
OptaMAPcorner(df,2)
#Pon la ruta donde tengas instsalada la libreria en mi caso:
ruta_eventos<-c(#Pon la ruta donde tengas instsalada la libreria en mi caso:
ruta_eventos<-c('C:/My Program Files/R/R-3.5.1/library/soccergraphR/data/f24.xml')
df<-OptaXMLeventos(ruta_eventos)
OptaMAPdirectpass(df,1))
#Pon la ruta donde tengas instsalada la libreria en mi caso:
ruta_eventos<-c('C:/Users/italo/Documents/R/win-library/3.6/soccergraphR/data/f24.xml')
df<-OptaXMLeventos(ruta_eventos)
OptaMAPdirectpass(df,1)
install_github("thecomeonman/CodaBonito")
install.packages("devtools")
install_github("thecomeonman/CodaBonito")
devtools::install_github("thecomeonman/CodaBonito")
library(devtools)
install_github("thecomeonman/CodaBonito")
library(CodaBonito)
dtPlayerMetrics
### uso libreria para abrir Json
library(jsonlite)
library(plyr)
## paso 1: seleccionar torneo 2019
#setwd("D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/ANFP/Data/Torneos Juveniles/Mundial U20/Polonia 2019/Partidos")
setwd("C:/Users/italo/Dropbox/soccer analytics/data/Mundial U20 Polonia 2019/Partidos")
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files("./Partidos")
## inicializo dataframe de jugadores
data_partidos <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
### uso libreria para abrir Json
library(jsonlite)
library(plyr)
## paso 1: seleccionar torneo 2019
#setwd("D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/ANFP/Data/Torneos Juveniles/Mundial U20/Polonia 2019/Partidos")
setwd("C:/Users/italo/Dropbox/soccer analytics/data/Mundial U20 Polonia 2019")
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files("./Partidos")
## inicializo dataframe de jugadores
data_partidos <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
print(npartidos)
for (i in 1:npartidos){
## paso 2: cargar archivos
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/Partidos/",partidos[i]))
data_partidolocal <- NULL
data_partidovisita <- NULL
## paso 3: ordenar los datos
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
contestant <- matchinfo$contestant
contestant1 <- contestant[[1]]$name
contestant2 <- contestant[[2]]$name
lineup <- livedata$lineUp
lineup1 <- lineup[[1]]
lineup2 <- lineup[[2]]
statslocal <- lineup1$stat
statsvisita <- lineup2$stat
### extraigo jugadores
jugadoreslocal <- lineup1$player
jugadoresvisita <- lineup2$player
njugadoresl <- length(jugadoreslocal)
njugadoresv <- length(jugadoresvisita)
###extraer partido, nombre equipo, fecha
for(s in 1:(njugadoresl)){
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup1$contestantId
stats$equipo <- contestant1
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,stats)
}
}
for(s in 1:(njugadoresv)){
#identifico jugador s
jugadors <- jugadoresvisita[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup2$contestantId
stats$equipo <- contestant2
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,stats)
}
}
data_partidolocal$local <- TRUE
data_partidovisita$local <- FALSE
data_partidolocal$id_partido <- matchinfo$id
data_partidovisita$id_partido <- matchinfo$id
#extraigo estadisticas de los equipos
data_partidos <- rbind.fill(data_partidos, data_partidolocal)
data_partidos <- rbind.fill(data_partidos, data_partidovisita)
}
save.image("data_procesada.RData")
View(data_partidos)
save.image("data_procesada.RData")
load("D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/FutbolAnalytics/R/2020-2/data_procesada.RData")
View(data_partidolocal)
View(data_partidovisita)
setwd("C:/Users/Casa/Dropbox/soccer analytics/data/Mundial U20 Polonia 2019")
library(jsonlite)
setwd("C:/Users/Casa/Dropbox/soccer analytics/data/Mundial U20 Polonia 2019/Partidos")
library(jsonlite)
library(plyr)
setwd("C:/Users/Casa/Dropbox/soccer analytics/data/Mundial U20 Polonia 2019/Partidos")
load("data_procesada.RData")
partidos = unique(data_partidos[,c("fecha","id_partido","equipo","local")])
data_partidos$outcome = "Tie"
for(i in 1:240){
id_part = unique(partidos$id_partido)[i]
data_i = data_partidos[data_partidos$id_partido == id_part,]
data_i$goals = as.numeric(data_i$goals)
if(sum(data_i$goals, na.rm=T)>0){
resultado = aggregate(goals~equipo,data_i,sum)
if(nrow(resultado)<2){
resultado = merge(data.frame("equipo" = unique(data_i$equipo)),
resultado,
by="equipo", all.x = T)
resultado$goals = ifelse(is.na(resultado$goals), 0, resultado$goals)
}
if(resultado$goals[1] > resultado$goals[2]){
data_partidos$outcome[data_partidos$equipo == resultado$equipo[1] &
data_partidos$id_partido == id_part] <- "Victory"
data_partidos$outcome[data_partidos$equipo == resultado$equipo[2] &
data_partidos$id_partido == id_part] <- "Loss"
} else if(resultado$goals[1] < resultado$goals[2]){
data_partidos$outcome[data_partidos$equipo == resultado$equipo[1] &
data_partidos$id_partido == id_part] <- "Loss"
data_partidos$outcome[data_partidos$equipo == resultado$equipo[2] &
data_partidos$id_partido == id_part] <- "Victory"
}
}
}
data_partidos$position[data_partidos$position== "Wing Back"] <- "Defender"
posiciones = c("Defender","Defensive Midfielder","Midfielder","Attacking Midfielder","Striker")
data_tabla1 = data_partidos[data_partidos$position %in% posiciones,]
variables = c("goalAssist",
"totalScoringAtt",
"ontargetScoringAtt",
"totalPass",
"accuratePass",
"totalThrows",
"wasFouled" ,
"totalOffside",
"wonTackle" ,
"totalClearance",
"blockedScoringAtt",
"fouls",
"yellowCard",
"goals",
"totalTackle" ,
"goalsConceded",
"saves",
"wonCorners"   ,
"lostCorners",
"minsPlayed")
data_tabla1 = data_tabla1[,c("id_partido","equipo","position","idjugador","fecha","outcome",variables)]
data_tabla1[,7:26] = lapply(data_tabla1[,7:26],function(x) as.numeric(as.character(x)))
data_tabla1[is.na(data_tabla1)] <- 0
campeonato = unique(data_partidos[,c("equipo","id_partido","outcome")])
campeonato$puntos = ifelse(campeonato$outcome == "Victory",3,
ifelse(campeonato$outcome == "Loss", 0, 1))
### uso libreria para abrir Json
library(jsonlite)
library(plyr)
## paso 1: seleccionar torneo 2019
#setwd("D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/ANFP/Data/Torneos Juveniles/Mundial U20/Polonia 2019/Partidos")
setwd("C:/Users/italo/Dropbox/soccer analytics/data/Mundial U20 Korea 2017")
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files("./Partidos")
## inicializo dataframe de jugadores
data_partidos <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
print(npartidos)
for (i in 1:npartidos){
## paso 2: cargar archivos
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/Partidos/",partidos[i]))
data_partidolocal <- NULL
data_partidovisita <- NULL
## paso 3: ordenar los datos
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
contestant <- matchinfo$contestant
contestant1 <- contestant[[1]]$name
contestant2 <- contestant[[2]]$name
lineup <- livedata$lineUp
lineup1 <- lineup[[1]]
lineup2 <- lineup[[2]]
statslocal <- lineup1$stat
statsvisita <- lineup2$stat
### extraigo jugadores
jugadoreslocal <- lineup1$player
jugadoresvisita <- lineup2$player
njugadoresl <- length(jugadoreslocal)
njugadoresv <- length(jugadoresvisita)
###extraer partido, nombre equipo, fecha
for(s in 1:(njugadoresl)){
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup1$contestantId
stats$equipo <- contestant1
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,stats)
}
}
for(s in 1:(njugadoresv)){
#identifico jugador s
jugadors <- jugadoresvisita[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup2$contestantId
stats$equipo <- contestant2
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,stats)
}
}
data_partidolocal$local <- TRUE
data_partidovisita$local <- FALSE
data_partidolocal$id_partido <- matchinfo$id
data_partidovisita$id_partido <- matchinfo$id
#extraigo estadisticas de los equipos
data_partidos <- rbind.fill(data_partidos, data_partidolocal)
data_partidos <- rbind.fill(data_partidos, data_partidovisita)
}
save.image("data_procesada.RData")
### uso libreria para abrir Json
library(jsonlite)
library(plyr)
## paso 1: seleccionar torneo 2019
#setwd("D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/ANFP/Data/Torneos Juveniles/Mundial U20/Polonia 2019/Partidos")
setwd("C:/Users/italo/Dropbox/soccer analytics/data/Mundial U17 India 2017")
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files("./Partidos")
## inicializo dataframe de jugadores
data_partidos <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
print(npartidos)
for (i in 1:npartidos){
## paso 2: cargar archivos
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/Partidos/",partidos[i]))
data_partidolocal <- NULL
data_partidovisita <- NULL
## paso 3: ordenar los datos
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
contestant <- matchinfo$contestant
contestant1 <- contestant[[1]]$name
contestant2 <- contestant[[2]]$name
lineup <- livedata$lineUp
lineup1 <- lineup[[1]]
lineup2 <- lineup[[2]]
statslocal <- lineup1$stat
statsvisita <- lineup2$stat
### extraigo jugadores
jugadoreslocal <- lineup1$player
jugadoresvisita <- lineup2$player
njugadoresl <- length(jugadoreslocal)
njugadoresv <- length(jugadoresvisita)
###extraer partido, nombre equipo, fecha
for(s in 1:(njugadoresl)){
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup1$contestantId
stats$equipo <- contestant1
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,stats)
}
}
for(s in 1:(njugadoresv)){
#identifico jugador s
jugadors <- jugadoresvisita[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup2$contestantId
stats$equipo <- contestant2
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,stats)
}
}
data_partidolocal$local <- TRUE
data_partidovisita$local <- FALSE
data_partidolocal$id_partido <- matchinfo$id
data_partidovisita$id_partido <- matchinfo$id
#extraigo estadisticas de los equipos
data_partidos <- rbind.fill(data_partidos, data_partidolocal)
data_partidos <- rbind.fill(data_partidos, data_partidovisita)
}
save.image("data_procesada.RData")
### uso libreria para abrir Json
library(jsonlite)
library(plyr)
## paso 1: seleccionar torneo 2019
#setwd("D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/ANFP/Data/Torneos Juveniles/Mundial U20/Polonia 2019/Partidos")
setwd("C:/Users/italo/Dropbox/soccer analytics/data/Mundial U17 Brasil 2019")
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files("./Partidos")
## inicializo dataframe de jugadores
data_partidos <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
print(npartidos)
for (i in 1:npartidos){
## paso 2: cargar archivos
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/Partidos/",partidos[i]))
data_partidolocal <- NULL
data_partidovisita <- NULL
## paso 3: ordenar los datos
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
contestant <- matchinfo$contestant
contestant1 <- contestant[[1]]$name
contestant2 <- contestant[[2]]$name
lineup <- livedata$lineUp
lineup1 <- lineup[[1]]
lineup2 <- lineup[[2]]
statslocal <- lineup1$stat
statsvisita <- lineup2$stat
### extraigo jugadores
jugadoreslocal <- lineup1$player
jugadoresvisita <- lineup2$player
njugadoresl <- length(jugadoreslocal)
njugadoresv <- length(jugadoresvisita)
###extraer partido, nombre equipo, fecha
for(s in 1:(njugadoresl)){
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup1$contestantId
stats$equipo <- contestant1
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,stats)
}
}
for(s in 1:(njugadoresv)){
#identifico jugador s
jugadors <- jugadoresvisita[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup2$contestantId
stats$equipo <- contestant2
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,stats)
}
}
data_partidolocal$local <- TRUE
data_partidovisita$local <- FALSE
data_partidolocal$id_partido <- matchinfo$id
data_partidovisita$id_partido <- matchinfo$id
#extraigo estadisticas de los equipos
data_partidos <- rbind.fill(data_partidos, data_partidolocal)
data_partidos <- rbind.fill(data_partidos, data_partidovisita)
}
save.image("data_procesada.RData")
