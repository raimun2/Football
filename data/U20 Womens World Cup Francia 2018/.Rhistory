}
}
for(s in 1:(njugadoresv)){
#identifico jugador s
jugadors <- jugadoresvisita[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup2$contestantId
stats$equipo <- contestant2
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,stats)
}
}
#Agrego columna para definir Loca/Visita
data_partidolocal$local <- TRUE
data_partidovisita$local <- FALSE
#agrego columna para el id de c/partido
data_partidolocal$id_partido <- matchinfo$id
data_partidovisita$id_partido <- matchinfo$id
#inicializo los data frames para las estadisticas de cada tiempo
statslocal_fh <- NULL
statsvisita_fh <- NULL
statslocal_sh <- NULL
statsvisita_sh <- NULL
lstatslocal <- length(statslocal)
lstatsvisita <- length(statsvisita)
for (x in 1:(lstatslocal)) {
variable <- statslocal[[x]]['type']
valorfh <- statslocal[[x]]['fh']
valorsh <- statslocal[[x]]['sh']
valor <- statslocal[[x]]['value']
if (length(statslocal[[x]]) < 4) {
valorfh <- valor
valorsh <- valor
}
dffh <- t(data.frame(variable, valorfh))
dfsh <- t(data.frame(variable, valorsh))
statslocal_fh <- cbind(statslocal_fh, dffh)
colnames(statslocal_fh) <- lapply(statslocal_fh[1,], as.character)
statslocal_sh <- cbind(statslocal_sh, dfsh)
colnames(statslocal_sh) <- lapply(statslocal_sh[1,], as.character)
}
statslocal_fh <- as.data.frame(statslocal_fh)
statslocal_sh <- as.data.frame(statslocal_sh)
for (j in 1:(lstatsvisita)) {
variablev <- statsvisita[[j]]['type']
valorfhv <- statsvisita[[j]]['fh']
valorshv <- statsvisita[[j]]['sh']
valorv <- statsvisita[[j]]['value']
if (length(statsvisita[[j]]) < 4) {
valorfhv <- valorv
valorshv <- valorv
}
dffhv <- t(data.frame(variablev, valorfhv))
dfshv <- t(data.frame(variablev, valorshv))
statsvisita_fh <- cbind(statsvisita_fh, dffhv)
colnames(statsvisita_fh) <- lapply(statsvisita_fh[1,], as.character)
statsvisita_sh <- cbind(statsvisita_sh, dfshv)
colnames(statsvisita_sh) <- lapply(statsvisita_sh[1,], as.character)
}
statsvisita_fh <- as.data.frame(statsvisita_fh)
statsvisita_sh <- as.data.frame(statsvisita_sh)
statslocal_fh$possessionPercentageRival <- statsvisita_fh$possessionPercentage
statslocal_fh$id_partido <- matchinfo$id
statslocal_fh$equipo <- contestant[[1]]$name
statslocal_fh$torneo <- matchinfo$competition$name
statslocal_sh$possessionPercentageRival <- statsvisita_sh$possessionPercentage
statslocal_sh$id_partido <- matchinfo$id
statslocal_sh$equipo <- contestant[[1]]$name
statslocal_sh$torneo <- matchinfo$competition$name
statslocal_fh <- as.data.frame(statslocal_fh[2,])
statslocal_sh <- as.data.frame(statslocal_sh[2,])
statsvisita_fh$possessionPercentageRival <- statslocal_fh$possessionPercentage
statsvisita_fh$id_partido <- matchinfo$id
statsvisita_fh$equipo <- contestant[[2]]$name
statsvisita_fh$torneo <- matchinfo$competition$name
statsvisita_sh$possessionPercentageRival <- statslocal_sh$possessionPercentage
statsvisita_sh$id_partido <- matchinfo$id
statsvisita_sh$equipo <- contestant[[2]]$name
statsvisita_sh$torneo <- matchinfo$competition$name
statsvisita_fh <- as.data.frame(statsvisita_fh[2,])
statsvisita_sh <- as.data.frame(statsvisita_sh[2,])
posesion <- NULL
posesion <- as.character(statslocal_fh$possessionPercentage)
#agrego estadisticas de c/equipo
data_partidos <- rbind.fill(data_partidos, data_partidolocal)
data_partidos <- rbind.fill(data_partidos, data_partidovisita)
#agrego estadisticas primer tiempo de c/equipo
data_primertiempo <- rbind.fill(data_primertiempo, statslocal_fh)
data_primertiempo <- rbind.fill(data_primertiempo, statsvisita_fh)
#agrego estadisticas segundo tiempo de c/equipo
data_segundotiempo <- rbind.fill(data_segundotiempo, statslocal_sh)
data_segundotiempo <- rbind.fill(data_segundotiempo, statsvisita_sh)
}
View(data_primertiempo)
View(data_segundotiempo)
write.table(data_primertiempo, "Mundial_FemeninoFrancia2019_PrimerTiempo.csv", row.names=FALSE)
write.table(data_segundotiempo, "Mundial_FemeninoFrancia2019_SegundoTiempo.csv", row.names=FALSE)
### uso libreria para abrir Json
library(jsonlite)
library(plyr)
library(data.table)
## paso 1: seleccionar torneo 2019
#setwd("D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/ANFP/Data/Torneos Juveniles/Mundial U20/Polonia 2019/Partidos")
setwd("C:/Users/italo/Dropbox/soccer analytics/data/U20 Womens World Cup Francia 2018")
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files("./Partidos")
## inicializo dataframe de jugadores
data_partidos <- NULL
data_primertiempo <- NULL
data_segundotiempo <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
print(npartidos)
for (i in 1:npartidos){
## paso 2: cargar archivos
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/Partidos/",partidos[i]))
data_partidolocal <- NULL
data_partidovisita <- NULL
## paso 3: ordenar los datos
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
fasepartidoj <- matchinfo$stage
contestant <- matchinfo$contestant
contestant1 <- contestant[[1]]$name
contestant2 <- contestant[[2]]$name
lineup <- livedata$lineUp
lineup1 <- lineup[[1]]
lineup2 <- lineup[[2]]
statslocal <- lineup1$stat
statsvisita <- lineup2$stat
### extraigo jugadores
jugadoreslocal <- lineup1$player
jugadoresvisita <- lineup2$player
njugadoresl <- length(jugadoreslocal)
njugadoresv <- length(jugadoresvisita)
###extraer partido, nombre equipo, fecha
for(s in 1:(njugadoresl)){
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup1$contestantId
stats$equipo <- contestant1
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,stats)
}
}
for(s in 1:(njugadoresv)){
#identifico jugador s
jugadors <- jugadoresvisita[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup2$contestantId
stats$equipo <- contestant2
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,stats)
}
}
#Agrego columna para definir Loca/Visita
data_partidolocal$local <- TRUE
data_partidovisita$local <- FALSE
#agrego columna para el id de c/partido
data_partidolocal$id_partido <- matchinfo$id
data_partidovisita$id_partido <- matchinfo$id
#inicializo los data frames para las estadisticas de cada tiempo
statslocal_fh <- NULL
statsvisita_fh <- NULL
statslocal_sh <- NULL
statsvisita_sh <- NULL
lstatslocal <- length(statslocal)
lstatsvisita <- length(statsvisita)
for (x in 1:(lstatslocal)) {
variable <- statslocal[[x]]['type']
valorfh <- statslocal[[x]]['fh']
valorsh <- statslocal[[x]]['sh']
valor <- statslocal[[x]]['value']
if (length(statslocal[[x]]) < 4) {
valorfh <- valor
valorsh <- valor
}
dffh <- t(data.frame(variable, valorfh))
dfsh <- t(data.frame(variable, valorsh))
statslocal_fh <- cbind(statslocal_fh, dffh)
colnames(statslocal_fh) <- lapply(statslocal_fh[1,], as.character)
statslocal_sh <- cbind(statslocal_sh, dfsh)
colnames(statslocal_sh) <- lapply(statslocal_sh[1,], as.character)
}
statslocal_fh <- as.data.frame(statslocal_fh)
statslocal_sh <- as.data.frame(statslocal_sh)
for (j in 1:(lstatsvisita)) {
variablev <- statsvisita[[j]]['type']
valorfhv <- statsvisita[[j]]['fh']
valorshv <- statsvisita[[j]]['sh']
valorv <- statsvisita[[j]]['value']
if (length(statsvisita[[j]]) < 4) {
valorfhv <- valorv
valorshv <- valorv
}
dffhv <- t(data.frame(variablev, valorfhv))
dfshv <- t(data.frame(variablev, valorshv))
statsvisita_fh <- cbind(statsvisita_fh, dffhv)
colnames(statsvisita_fh) <- lapply(statsvisita_fh[1,], as.character)
statsvisita_sh <- cbind(statsvisita_sh, dfshv)
colnames(statsvisita_sh) <- lapply(statsvisita_sh[1,], as.character)
}
statsvisita_fh <- as.data.frame(statsvisita_fh)
statsvisita_sh <- as.data.frame(statsvisita_sh)
statslocal_fh$possessionPercentageRival <- statsvisita_fh$possessionPercentage
statslocal_fh$id_partido <- matchinfo$id
statslocal_fh$equipo <- contestant[[1]]$name
statslocal_fh$torneo <- matchinfo$competition$name
statslocal_sh$possessionPercentageRival <- statsvisita_sh$possessionPercentage
statslocal_sh$id_partido <- matchinfo$id
statslocal_sh$equipo <- contestant[[1]]$name
statslocal_sh$torneo <- matchinfo$competition$name
statslocal_fh <- as.data.frame(statslocal_fh[2,])
statslocal_sh <- as.data.frame(statslocal_sh[2,])
statsvisita_fh$possessionPercentageRival <- statslocal_fh$possessionPercentage
statsvisita_fh$id_partido <- matchinfo$id
statsvisita_fh$equipo <- contestant[[2]]$name
statsvisita_fh$torneo <- matchinfo$competition$name
statsvisita_sh$possessionPercentageRival <- statslocal_sh$possessionPercentage
statsvisita_sh$id_partido <- matchinfo$id
statsvisita_sh$equipo <- contestant[[2]]$name
statsvisita_sh$torneo <- matchinfo$competition$name
statsvisita_fh <- as.data.frame(statsvisita_fh[2,])
statsvisita_sh <- as.data.frame(statsvisita_sh[2,])
posesion <- NULL
posesion <- as.character(statslocal_fh$possessionPercentage)
#agrego estadisticas de c/equipo
data_partidos <- rbind.fill(data_partidos, data_partidolocal)
data_partidos <- rbind.fill(data_partidos, data_partidovisita)
#agrego estadisticas primer tiempo de c/equipo
data_primertiempo <- rbind.fill(data_primertiempo, statslocal_fh)
data_primertiempo <- rbind.fill(data_primertiempo, statsvisita_fh)
#agrego estadisticas segundo tiempo de c/equipo
data_segundotiempo <- rbind.fill(data_segundotiempo, statslocal_sh)
data_segundotiempo <- rbind.fill(data_segundotiempo, statsvisita_sh)
}
View(data_primertiempo)
write.table(data_primertiempo, "Mundial_U20FemeninoFrancia2018_PrimerTiempo.csv", row.names=FALSE)
write.table(data_segundotiempo, "Mundial_U20FemeninoFrancia2018_SegundoTiempo.csv", row.names=FALSE)
View(data_primertiempo)
### uso libreria para abrir Json
library(jsonlite)
library(plyr)
library(data.table)
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files("./Partidos")
## inicializo dataframe de jugadores
data_partidos <- NULL
data_primertiempo <- NULL
data_segundotiempo <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
print(npartidos)
for (i in 1:npartidos){
## paso 2: cargar archivos
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/Partidos/",partidos[i]))
data_partidolocal <- NULL
data_partidovisita <- NULL
## paso 3: ordenar los datos
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
fasepartidoj <- matchinfo$stage
resultado <- livedata$matchDetails$scores
resultadohtlocal <- as.character(resultado$ht$home)
resultadoftlocal <- as.character(resultado$ft$home)
resultadohtvisita <- as.character(resultado$ht$away)
resultadoftvisita <- as.character(resultado$ft$away)
primerGol <- as.character(livedata$goal[[1]]$timeMin)
contestant <- matchinfo$contestant
contestant1 <- contestant[[1]]$name
contestant2 <- contestant[[2]]$name
lineup <- livedata$lineUp
lineup1 <- lineup[[1]]
lineup2 <- lineup[[2]]
statslocal <- lineup1$stat
statsvisita <- lineup2$stat
### extraigo jugadores
jugadoreslocal <- lineup1$player
jugadoresvisita <- lineup2$player
njugadoresl <- length(jugadoreslocal)
njugadoresv <- length(jugadoresvisita)
###extraer partido, nombre equipo, fecha
for(s in 1:(njugadoresl)){
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup1$contestantId
stats$equipo <- contestant1
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,stats)
}
}
for(s in 1:(njugadoresv)){
#identifico jugador s
jugadors <- jugadoresvisita[[s]]
if(!is.null(jugadors$stat)){
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### jugadors$stat <- NULL
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup2$contestantId
stats$equipo <- contestant2
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,stats)
}
}
#Agrego columna para definir Loca/Visita
data_partidolocal$local <- TRUE
data_partidovisita$local <- FALSE
#agrego columna para el id de c/partido
data_partidolocal$id_partido <- matchinfo$id
data_partidovisita$id_partido <- matchinfo$id
#inicializo los data frames para las estadisticas de cada tiempo
statslocal_fh <- NULL
statsvisita_fh <- NULL
statslocal_sh <- NULL
statsvisita_sh <- NULL
lstatslocal <- length(statslocal)
lstatsvisita <- length(statsvisita)
for (x in 1:(lstatslocal)) {
variable <- statslocal[[x]]['type']
valorfh <- statslocal[[x]]['fh']
valorsh <- statslocal[[x]]['sh']
valor <- statslocal[[x]]['value']
if (length(statslocal[[x]]) < 4) {
valorfh <- valor
valorsh <- valor
}
dffh <- t(data.frame(variable, valorfh))
dfsh <- t(data.frame(variable, valorsh))
statslocal_fh <- cbind(statslocal_fh, dffh)
colnames(statslocal_fh) <- lapply(statslocal_fh[1,], as.character)
statslocal_sh <- cbind(statslocal_sh, dfsh)
colnames(statslocal_sh) <- lapply(statslocal_sh[1,], as.character)
}
statslocal_fh <- cbind(statslocal_fh,  golesAfavorHT=c(resultadohtlocal))
statslocal_fh <- cbind(statslocal_fh,  golesEnContraHT=c(resultadohtvisita))
statslocal_fh <- cbind(statslocal_fh,  minPrimerGol=c(primerGol))
statslocal_fh <- as.data.frame(statslocal_fh)
statslocal_sh <- cbind(statslocal_sh,  golesAfavorFT=c(resultadoftlocal))
statslocal_sh <- cbind(statslocal_sh,  golesEnContraFT=c(resultadoftvisita))
statslocal_sh <- cbind(statslocal_sh,  minPrimerGol=c(primerGol))
statslocal_sh <- as.data.frame(statslocal_sh)
for (j in 1:(lstatsvisita)) {
variablev <- statsvisita[[j]]['type']
valorfhv <- statsvisita[[j]]['fh']
valorshv <- statsvisita[[j]]['sh']
valorv <- statsvisita[[j]]['value']
if (length(statsvisita[[j]]) < 4) {
valorfhv <- valorv
valorshv <- valorv
}
dffhv <- t(data.frame(variablev, valorfhv))
dfshv <- t(data.frame(variablev, valorshv))
statsvisita_fh <- cbind(statsvisita_fh, dffhv)
colnames(statsvisita_fh) <- lapply(statsvisita_fh[1,], as.character)
statsvisita_sh <- cbind(statsvisita_sh, dfshv)
colnames(statsvisita_sh) <- lapply(statsvisita_sh[1,], as.character)
}
statsvisita_fh <- cbind(statsvisita_fh,  golesAfavorHT=c(resultadohtvisita))
statsvisita_fh <- cbind(statsvisita_fh,  golesEnContraHT=c(resultadohtlocal))
statsvisita_fh <- cbind(statsvisita_fh,  minPrimerGol=c(primerGol))
statsvisita_fh <- as.data.frame(statsvisita_fh)
statsvisita_sh <- cbind(statsvisita_sh,  golesAfavorFT=c(resultadoftvisita))
statsvisita_sh <- cbind(statsvisita_sh,  golesEnContraFT=c(resultadoftlocal))
statsvisita_sh <- cbind(statsvisita_sh,  minPrimerGol=c(primerGol))
statsvisita_sh <- as.data.frame(statsvisita_sh)
statslocal_fh$possessionPercentageRival <- statsvisita_fh$possessionPercentage
statslocal_fh$id_partido <- matchinfo$id
statslocal_fh$equipo <- contestant[[1]]$name
statslocal_fh$torneo <- matchinfo$competition$name
statslocal_fh$local <- TRUE
statslocal_sh$possessionPercentageRival <- statsvisita_sh$possessionPercentage
statslocal_sh$id_partido <- matchinfo$id
statslocal_sh$equipo <- contestant[[1]]$name
statslocal_sh$torneo <- matchinfo$competition$name
statslocal_sh$local <- TRUE
statslocal_fh <- as.data.frame(statslocal_fh[2,])
statslocal_sh <- as.data.frame(statslocal_sh[2,])
statsvisita_fh$possessionPercentageRival <- statslocal_fh$possessionPercentage
statsvisita_fh$id_partido <- matchinfo$id
statsvisita_fh$equipo <- contestant[[2]]$name
statsvisita_fh$torneo <- matchinfo$competition$name
statsvisita_fh$local <- FALSE
statsvisita_sh$possessionPercentageRival <- statslocal_sh$possessionPercentage
statsvisita_sh$id_partido <- matchinfo$id
statsvisita_sh$equipo <- contestant[[2]]$name
statsvisita_sh$torneo <- matchinfo$competition$name
statsvisita_sh$local <- FALSE
statsvisita_fh <- as.data.frame(statsvisita_fh[2,])
statsvisita_sh <- as.data.frame(statsvisita_sh[2,])
#agrego estadisticas de c/equipo
data_partidos <- rbind.fill(data_partidos, data_partidolocal)
data_partidos <- rbind.fill(data_partidos, data_partidovisita)
#agrego estadisticas primer tiempo de c/equipo
data_primertiempo <- rbind.fill(data_primertiempo, statslocal_fh)
data_primertiempo <- rbind.fill(data_primertiempo, statsvisita_fh)
#agrego estadisticas segundo tiempo de c/equipo
data_segundotiempo <- rbind.fill(data_segundotiempo, statslocal_sh)
data_segundotiempo <- rbind.fill(data_segundotiempo, statsvisita_sh)
}
data_primertiempo[is.na(data_primertiempo)]
data_primertiempo[is.na(data_primertiempo)] <- 0
View(data_primertiempo)
data_segundotiempo[is.na(data_segundotiempo)] <- 0
#Orden Data Frames
data_primertiempo <- data_primertiempo[,c("id_partido","equipo","saves","totalClearance","wonTackle","totalThrows",
"penaltyConceded","penaltyFaced","penGoalsConceded","penaltySave","totalTackle","totalYellowCard","secondYellow",
"totalRedCard","lostCorners","fkFoulLost","goalsConceded","ownGoals","totalPass","accuratePass","goals","goalAssist","totalScoringAtt","ontargetScoringAtt",
"blockedScoringAtt","shotOffTarget","goalKicks","penaltyWon","fkFoulWon","totalOffside","wonCorners",
"cornerTaken","cleanSheet","possessionPercentage","possessionPercentageRival","minPrimerGol","golesAfavorHT",
"golesEnContraHT","subsMade","formationUsed","torneo","local"
)]
data_segundotiempo <- data_segundotiempo[,c("id_partido","equipo","saves","totalClearance","wonTackle","totalThrows",
"penaltyConceded","penaltyFaced","penGoalsConceded","penaltySave","totalTackle","totalYellowCard","secondYellow",
"totalRedCard","lostCorners","fkFoulLost","goalsConceded","ownGoals","totalPass","accuratePass","goals","goalAssist","totalScoringAtt","ontargetScoringAtt",
"blockedScoringAtt","shotOffTarget","goalKicks","penaltyWon","fkFoulWon","totalOffside","wonCorners",
"cornerTaken","cleanSheet","possessionPercentage","possessionPercentageRival","minPrimerGol","golesAfavorHT",
"golesEnContraHT","subsMade","formationUsed","torneo","local"
)]
colnames(data_segundotiempo)
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/Partidos/",partidos[i]))
data_partidolocal <- NULL
data_partidovisita <- NULL
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
fasepartidoj <- matchinfo$stage
resultado <- livedata$matchDetails$scores
resultadohtlocal <- as.character(resultado$ht$home)
resultadoftlocal <- as.character(resultado$ft$home)
resultadohtvisita <- as.character(resultado$ht$away)
resultadoftvisita <- as.character(resultado$ft$away)
primerGol <- as.character(livedata$goal[[1]]$timeMin)
livedata$goal[[1]]$timeMin
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
jugadors <- jugadoreslocal[[1]]
stats <- as.data.frame(matrix(unlist(jugadors$stat), nrow = 2))
colnames(stats) <- lapply(stats[1,], as.character)
stats <- as.data.frame(stats[2,])
### junto variables relevantes de cada jugador
stats$fecha <- matchinfo$date
stats$idequipo <- lineup1$contestantId
stats$equipo <- contestant1
stats$idjugador <- jugadors$playerId
stats$position <- jugadors$position
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,stats)
dffh <- t(data.frame(variable, valorfh))
dfsh <- t(data.frame(variable, valorsh))
colnames(statslocal_fh) <- lapply(statslocal_fh[1,], as.character)
statslocal_sh <- cbind(statslocal_sh, dfsh)
a = c("Monse", "Rafa", "Italo", "Raimundo")
a = factor(c("Monse", "Rafa", "Italo", "Raimundo"))
a
as.numeric(a)
b = factor(c(65,345,6,87))
b
as.numeric(b)
as.character(b)
as.numeric(as.character(b))
