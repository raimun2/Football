library(jsonlite)
library(plyr)
## paso 1: seleccionar torneo 2019
setwd("C:\Users\Casa\Dropbox\soccer analytics\data\Torneos Juveniles\Mundial U20\Polonia 2019\Partidos")
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files()
## inicializo dataframe de jugadores
data_partidos <- NULL
data_partidolocal <- NULL
data_partidovisita <- NULL
data_equipol <- NULL
data_equipov <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
print(npartidos)
for (i in 1:npartidos){
if (i == 1) {
## paso 2: cargar archivos
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/",partidos[i]))
## paso 3: ordenar los datos
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
contestant <- matchinfo$contestant
contestant1 <- contestant[[1]]
contestant2 <- contestant[[2]]
lineup <- livedata$lineUp
lineup1 <- lineup[[1]]
lineup2 <- lineup[[2]]
statslocal <- lineup1$stat
statsvisita <- lineup2$stat
### extraigo jugadores
jugadoreslocal <- lineup1$player
jugadoresvisita <- lineup2$player
njugadoresl <- length(jugadoreslocal)
njugadoresv <- length(jugadoresvisita)
###extraer partido, nombre equipo, fecha
for(s in 1:(njugadoresl)){
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
stats <- as.data.frame(jugadors$stat)
jugadors$stat <- NULL
### junto variables relevantes de cada jugador
jugadors$fecha <- matchinfo$date
jugadors$idequipo <- lineup1$contestantId
jugadors$equipo <- contestant1$shortName
jugadors <- cbind(jugadors,stats)
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,jugadors)
data_partidolocal <- cbind(data_partidolocal, jugadors)
}
for(d in 1:(njugadoresv)){
#identifico jugador j
jugadord <- jugadoresvisita[[d]]
stats <- as.data.frame(jugadord$stat)
jugadord$stat <- NULL
### junto variables relevantes de cada jugador
jugadord$fecha <- matchinfo$date
jugadord$idequipo <- lineup2$contestantId
jugadord$equipo <- contestant2$shortName
jugadord <- cbind(jugadord,stats)
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,jugadord)
data_partidovisita <- cbind(data_partidovisita, jugadord)
}
#extraigo estadisticas de los equipos
nstatl <- length(statslocal)
nstatv <- length(statsvisita)
variablestatlocal <- list(NULL)
valoresstatlocal <- list(NULL)
varieblesstatvisita <- list(NULL)
valoresstatvisita <- list(NULL)
for (j in 1:nstatl) {
#identifico estadisticas del local
data_equipol <- statslocal[[j]]['type']
#identifico valores de las estadisticas del local
valorj <- statslocal[[j]]['value']
eqstats <- as.data.frame(valorj$value)
data_equipol <- cbind(data_equipol,eqstats)
#añado ambas variables a un dataframe
data_equipol <- rbind.fill(dataequipol,valorj)
data_equipol <- cbind(dataequipol,valorj)
}
for (k in 1:nstatv) {
#identifico estadisticas del visitante
statk <- statsvisita[[k]]['type']
#identifico valores de las estadisticas del visitante
valork <- statsvisita[[k]]['value']
#añado ambas variables a un dataframe
variablestatvisita <- c(statk)
valoresstatvisita <- c(valork)
print(statk)
}
}
}
View(data_equipol)
#Table 1. Descriptive statistics of match performance profiles of players
#from Top3 and Bottom3 teams (results are counts, except for Pass Accuracy).
### uso libreria para abrir Json
library(jsonlite)
library(plyr)
## paso 1: seleccionar torneo 2019
setwd("C:\Users\Casa\Dropbox\soccer analytics\data\Torneos Juveniles\Mundial U20\Polonia 2019\Partidos")
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files()
## inicializo dataframe de jugadores
data_partidos <- NULL
data_partidolocal <- NULL
data_partidovisita <- NULL
data_equipol <- NULL
data_equipov <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
print(npartidos)
for (i in 1:npartidos){
if (i == 1) {
## paso 2: cargar archivos
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/",partidos[i]))
## paso 3: ordenar los datos
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
contestant <- matchinfo$contestant
contestant1 <- contestant[[1]]
contestant2 <- contestant[[2]]
lineup <- livedata$lineUp
lineup1 <- lineup[[1]]
lineup2 <- lineup[[2]]
statslocal <- lineup1$stat
statsvisita <- lineup2$stat
### extraigo jugadores
jugadoreslocal <- lineup1$player
jugadoresvisita <- lineup2$player
njugadoresl <- length(jugadoreslocal)
njugadoresv <- length(jugadoresvisita)
###extraer partido, nombre equipo, fecha
for(s in 1:(njugadoresl)){
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
stats <- as.data.frame(jugadors$stat)
jugadors$stat <- NULL
### junto variables relevantes de cada jugador
jugadors$fecha <- matchinfo$date
jugadors$idequipo <- lineup1$contestantId
jugadors$equipo <- contestant1$shortName
jugadors <- cbind(jugadors,stats)
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,jugadors)
data_partidolocal <- cbind(data_partidolocal, jugadors)
}
for(d in 1:(njugadoresv)){
#identifico jugador j
jugadord <- jugadoresvisita[[d]]
stats <- as.data.frame(jugadord$stat)
jugadord$stat <- NULL
### junto variables relevantes de cada jugador
jugadord$fecha <- matchinfo$date
jugadord$idequipo <- lineup2$contestantId
jugadord$equipo <- contestant2$shortName
jugadord <- cbind(jugadord,stats)
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,jugadord)
data_partidovisita <- cbind(data_partidovisita, jugadord)
}
#extraigo estadisticas de los equipos
nstatl <- length(statslocal)
nstatv <- length(statsvisita)
variablestatlocal <- list(NULL)
valoresstatlocal <- list(NULL)
varieblesstatvisita <- list(NULL)
valoresstatvisita <- list(NULL)
for (j in 1:nstatl) {
#identifico estadisticas del local
data_equipol <- statslocal[[j]]['type']
#identifico valores de las estadisticas del local
valorj <- statslocal[[j]]['value']
eqstats <- as.data.frame(valorj$value)
data_equipol <- cbind(data_equipol,eqstats)
valorj <- cbind(valorj,eqstats)
#añado ambas variables a un dataframe
data_equipol <- rbind.fill(dataequipol,valorj)
data_equipol <- cbind(dataequipol,valorj)
}
for (k in 1:nstatv) {
#identifico estadisticas del visitante
statk <- statsvisita[[k]]['type']
#identifico valores de las estadisticas del visitante
valork <- statsvisita[[k]]['value']
#añado ambas variables a un dataframe
variablestatvisita <- c(statk)
valoresstatvisita <- c(valork)
print(statk)
}
}
}
View(data_equipol)
View(data_equipol)
#Table 1. Descriptive statistics of match performance profiles of players
#from Top3 and Bottom3 teams (results are counts, except for Pass Accuracy).
### uso libreria para abrir Json
library(jsonlite)
library(plyr)
## paso 1: seleccionar torneo 2019
setwd("C:\Users\Casa\Dropbox\soccer analytics\data\Torneos Juveniles\Mundial U20\Polonia 2019\Partidos")
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files()
## inicializo dataframe de jugadores
data_partidos <- NULL
data_partidolocal <- NULL
data_partidovisita <- NULL
data_equipol <- NULL
data_equipov <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
print(npartidos)
for (i in 1:npartidos){
if (i == 1) {
## paso 2: cargar archivos
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/",partidos[i]))
## paso 3: ordenar los datos
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
contestant <- matchinfo$contestant
contestant1 <- contestant[[1]]
contestant2 <- contestant[[2]]
lineup <- livedata$lineUp
lineup1 <- lineup[[1]]
lineup2 <- lineup[[2]]
statslocal <- lineup1$stat
statsvisita <- lineup2$stat
### extraigo jugadores
jugadoreslocal <- lineup1$player
jugadoresvisita <- lineup2$player
njugadoresl <- length(jugadoreslocal)
njugadoresv <- length(jugadoresvisita)
###extraer partido, nombre equipo, fecha
for(s in 1:(njugadoresl)){
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
stats <- as.data.frame(jugadors$stat)
jugadors$stat <- NULL
### junto variables relevantes de cada jugador
jugadors$fecha <- matchinfo$date
jugadors$idequipo <- lineup1$contestantId
jugadors$equipo <- contestant1$shortName
jugadors <- cbind(jugadors,stats)
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,jugadors)
data_partidolocal <- cbind(data_partidolocal, jugadors)
}
for(d in 1:(njugadoresv)){
#identifico jugador j
jugadord <- jugadoresvisita[[d]]
stats <- as.data.frame(jugadord$stat)
jugadord$stat <- NULL
### junto variables relevantes de cada jugador
jugadord$fecha <- matchinfo$date
jugadord$idequipo <- lineup2$contestantId
jugadord$equipo <- contestant2$shortName
jugadord <- cbind(jugadord,stats)
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,jugadord)
data_partidovisita <- cbind(data_partidovisita, jugadord)
}
#extraigo estadisticas de los equipos
nstatl <- length(statslocal)
nstatv <- length(statsvisita)
variablestatlocal <- list(NULL)
valoresstatlocal <- list(NULL)
varieblesstatvisita <- list(NULL)
valoresstatvisita <- list(NULL)
for (j in 1:nstatl) {
#identifico estadisticas del local
data_equipol <- statslocal[[j]]['type']
#identifico valores de las estadisticas del local
valorj <- statslocal[[j]]['value']
eqstats <- as.data.frame(valorj$value)
data_equipol <- cbind(data_equipol,eqstats)
#añado ambas variables a un dataframe
data_equipol <- rbind.fill(dataequipol,valorj)
data_equipol <- cbind.fill(dataequipol,valorj)
}
for (k in 1:nstatv) {
#identifico estadisticas del visitante
statk <- statsvisita[[k]]['type']
#identifico valores de las estadisticas del visitante
valork <- statsvisita[[k]]['value']
#añado ambas variables a un dataframe
variablestatvisita <- c(statk)
valoresstatvisita <- c(valork)
print(statk)
}
}
}
View(data_equipol)
#Table 1. Descriptive statistics of match performance profiles of players
#from Top3 and Bottom3 teams (results are counts, except for Pass Accuracy).
### uso libreria para abrir Json
library(jsonlite)
library(plyr)
## paso 1: seleccionar torneo 2019
setwd("C:\Users\Casa\Dropbox\soccer analytics\data\Torneos Juveniles\Mundial U20\Polonia 2019\Partidos")
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files()
## inicializo dataframe de jugadores
data_partidos <- NULL
data_partidolocal <- NULL
data_partidovisita <- NULL
data_equipol <- NULL
data_equipov <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
print(npartidos)
for (i in 1:npartidos){
if (i == 1) {
## paso 2: cargar archivos
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/",partidos[i]))
## paso 3: ordenar los datos
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
contestant <- matchinfo$contestant
contestant1 <- contestant[[1]]
contestant2 <- contestant[[2]]
lineup <- livedata$lineUp
lineup1 <- lineup[[1]]
lineup2 <- lineup[[2]]
statslocal <- lineup1$stat
statsvisita <- lineup2$stat
### extraigo jugadores
jugadoreslocal <- lineup1$player
jugadoresvisita <- lineup2$player
njugadoresl <- length(jugadoreslocal)
njugadoresv <- length(jugadoresvisita)
###extraer partido, nombre equipo, fecha
for(s in 1:(njugadoresl)){
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
stats <- as.data.frame(jugadors$stat)
jugadors$stat <- NULL
### junto variables relevantes de cada jugador
jugadors$fecha <- matchinfo$date
jugadors$idequipo <- lineup1$contestantId
jugadors$equipo <- contestant1$shortName
jugadors <- cbind(jugadors,stats)
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,jugadors)
data_partidolocal <- cbind(data_partidolocal, jugadors)
}
for(d in 1:(njugadoresv)){
#identifico jugador j
jugadord <- jugadoresvisita[[d]]
stats <- as.data.frame(jugadord$stat)
jugadord$stat <- NULL
### junto variables relevantes de cada jugador
jugadord$fecha <- matchinfo$date
jugadord$idequipo <- lineup2$contestantId
jugadord$equipo <- contestant2$shortName
jugadord <- cbind(jugadord,stats)
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,jugadord)
data_partidovisita <- cbind(data_partidovisita, jugadord)
}
#extraigo estadisticas de los equipos
nstatl <- length(statslocal)
nstatv <- length(statsvisita)
variablestatlocal <- list(NULL)
valoresstatlocal <- list(NULL)
varieblesstatvisita <- list(NULL)
valoresstatvisita <- list(NULL)
for (j in 1:nstatl) {
#identifico estadisticas del local
data_equipol <- statslocal[[j]]['type']
#identifico valores de las estadisticas del local
valorj <- statslocal[[j]]['value']
eqstats <- as.data.frame(valorj$value)
data_equipol <- cbind(data_equipol,eqstats)
valorj <- cbind(valorj,eqstats)
#añado ambas variables a un dataframe
data_equipol <- rbind.fill(dataequipol,valorj)
valorj <- cbind(dataequipol,valorj)
}
for (k in 1:nstatv) {
#identifico estadisticas del visitante
statk <- statsvisita[[k]]['type']
#identifico valores de las estadisticas del visitante
valork <- statsvisita[[k]]['value']
#añado ambas variables a un dataframe
variablestatvisita <- c(statk)
valoresstatvisita <- c(valork)
print(statk)
}
}
}
View(data_partidolocal)
View(data_equipol)
#Table 1. Descriptive statistics of match performance profiles of players
#from Top3 and Bottom3 teams (results are counts, except for Pass Accuracy).
### uso libreria para abrir Json
library(jsonlite)
library(plyr)
## paso 1: seleccionar torneo 2019
setwd("C:\Users\Casa\Dropbox\soccer analytics\data\Torneos Juveniles\Mundial U20\Polonia 2019\Partidos")
## genero una lista de todos los archivos en esa carpeta
partidos <- list.files()
## inicializo dataframe de jugadores
data_partidos <- NULL
data_partidolocal <- NULL
data_partidovisita <- NULL
data_equipol <- NULL
data_equipov <- NULL
## recorrer todos los archivos para leerlos
npartidos <- length(partidos)
print(npartidos)
for (i in 1:npartidos){
if (i == 1) {
## paso 2: cargar archivos
## leo el partido i
partidoi <- read_json(paste0(getwd(),"/",partidos[i]))
## paso 3: ordenar los datos
## extraigo variables relevantes
matchinfo <- partidoi$matchInfo
livedata <- partidoi$liveData
fechapartido <- matchinfo$date
partidoj <- matchinfo$description
contestant <- matchinfo$contestant
contestant1 <- contestant[[1]]
contestant2 <- contestant[[2]]
lineup <- livedata$lineUp
lineup1 <- lineup[[1]]
lineup2 <- lineup[[2]]
statslocal <- lineup1$stat
statsvisita <- lineup2$stat
### extraigo jugadores
jugadoreslocal <- lineup1$player
jugadoresvisita <- lineup2$player
njugadoresl <- length(jugadoreslocal)
njugadoresv <- length(jugadoresvisita)
###extraer partido, nombre equipo, fecha
for(s in 1:(njugadoresl)){
#identifico jugador s
jugadors <- jugadoreslocal[[s]]
stats <- as.data.frame(jugadors$stat)
jugadors$stat <- NULL
### junto variables relevantes de cada jugador
jugadors$fecha <- matchinfo$date
jugadors$idequipo <- lineup1$contestantId
jugadors$equipo <- contestant1$shortName
jugadors <- cbind(jugadors,stats)
## junto todo
data_partidolocal <- rbind.fill(data_partidolocal,jugadors)
data_partidolocal <- cbind(data_partidolocal, jugadors)
}
for(d in 1:(njugadoresv)){
#identifico jugador j
jugadord <- jugadoresvisita[[d]]
stats <- as.data.frame(jugadord$stat)
jugadord$stat <- NULL
### junto variables relevantes de cada jugador
jugadord$fecha <- matchinfo$date
jugadord$idequipo <- lineup2$contestantId
jugadord$equipo <- contestant2$shortName
jugadord <- cbind(jugadord,stats)
## junto todo
data_partidovisita <- rbind.fill(data_partidovisita,jugadord)
data_partidovisita <- cbind(data_partidovisita, jugadord)
}
#extraigo estadisticas de los equipos
nstatl <- length(statslocal)
nstatv <- length(statsvisita)
variablestatlocal <- list(NULL)
valoresstatlocal <- list(NULL)
varieblesstatvisita <- list(NULL)
valoresstatvisita <- list(NULL)
for (j in 1:nstatl) {
#identifico estadisticas del local
data_equipol <- statslocal[[j]]['type']
#identifico valores de las estadisticas del local
valorj <- statslocal[[j]]['value']
eqstats <- as.data.frame(valorj$value)
data_equipol <- cbind(data_equipol,eqstats)
valorj <- cbind(valorj,eqstats)
#añado ambas variables a un dataframe
data_equipol <- rbind.fill(valorj)
data_equipol <- cbind(dataequipol,valorj)
}
for (k in 1:nstatv) {
#identifico estadisticas del visitante
statk <- statsvisita[[k]]['type']
#identifico valores de las estadisticas del visitante
valork <- statsvisita[[k]]['value']
#añado ambas variables a un dataframe
variablestatvisita <- c(statk)
valoresstatvisita <- c(valork)
print(statk)
}
}
}
source('C:/Users/Casa/Desktop/Pasantía/Tabla_2R.R')
