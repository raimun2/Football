if (!require("devtools")) install.packages("devtools")
devtools::install_github("jogall/soccermatics")
library(soccermatics)
devtools::install_github("ryurko/fcscrapR")
if (!require("devtools")) install.packages("devtools")
devtools::install_github("jogall/soccermatics")
library(soccermatics)
library(soccermatics)
library(soccermatics)statsbomb %>%
filter(team.name == "France") %>%
soccerShotmap(theme = "dark")
devtools::install_github("statsbomb/StarsBombR")
library("devtools", lib.loc="C:/Users/italo/Anaconda3/envs/rstudio/lib/R/library")
devtools::install_github("statsbomb/StatsBombR")
library("devtools", lib.loc="C:/Users/italo/Anaconda3/envs/rstudio/lib/R/library")
devtools::install_github("statsbomb/StatsBombR")
library(devtools)
install.packages("usethis")
library(devtools)
install.packages("Rcpp")
library(devtools)
install_github("statsbomb/StatsBombR")
FreeCompetitions()
􀀮hots_goals = StatsBombData %>%
group_by(team.name) %>%
summarise(shots = sum(type.name=="Shot", na.rm = TRUE),
goals = sum(shot.outcome.name=="Goal", na.rm = TRUE))
shots_goals=StatsBombData
devtools::install_github("jogall/soccermatics")
devtools::install_github("jogall/soccermatics")
install.packages("C:/Users/italo/Downloads/digest_0.6.23.tar.gz", repos = NULL, type = "source")
devtools::install_github("jogall/soccermatics")
install.packages("tidyverse")
install.packages("devtools")
devtools::install_github("statsbomb/StatsBombR")
install.packages("rlang")
remove.packages("rlang")
install.packages("rlang")
sessionInfo()
if (!require("devtools")) install.packages("devtools")
devtools::install_github("jogall/soccermatics")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("jogall/soccermatics")
devtools::install_github('jelagmil/soccergraphR', build_opts = c("--no-resave-data", "--no-manual"))
library(soccergraphR)
install.packages("cowplot")
devtools::install_github("jogall/soccermatics")
install.packages("forcats")
devtools::install_github("jogall/soccermatics")
install.packages("ggrepel")
devtools::install_github("jogall/soccermatics")
install.packages("xts")
devtools::install_github("jogall/soccermatics")
browseVignettes("soccergraphR")
library("soccergraphR")
browseVignettes("soccergraphR")
vignette("soccergraphR")
?OptaMAParrowpass
install.packages("StatsBombR")
devtools::install_github("statsbomb/StatsBombR")
install.packages("SDMTools")
install.packages("devtools")
devtools::install_github("statsbomb/StatsBombR")
install.packages("SDMTools")
devtools::install_github("cran/SDMTools")
install.packages("C:/Users/italo/Downloads/SDMTools_1.1-221.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/italo/Downloads/SDMTools_1.0.tar.gz", repos = NULL, type = "source")
install.packages("adehabitat")
install.packages("C:/Users/italo/Downloads/adehabitat_1.8.20.tar.gz", repos = NULL, type = "source")
install.packages("ade4")
installed.package("tkrplot")
install.packages("tkrplot")
install.packages("shapefiles")
install.packages("C:/Users/italo/Downloads/adehabitat_1.8.20.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/italo/Downloads/adehabitat_1.8.20.tar.gz", repos = NULL, type = "source")
devtools::install_github("jogall/soccermatics")
install.packages("cowplot")
devtools::install_github("jogall/soccermatics")
install.packages("forcats")
devtools::install_github("jogall/soccermatics")
install.packages("ggforce")
devtools::install_github("jogall/soccermatics")
install.packages("ggrepel")
devtools::install_github("jogall/soccermatics")
install.packages("plyr")
devtools::install_github("jogall/soccermatics")
install.packages("tidyr")
devtools::install_github("jogall/soccermatics")
install.packages("xts")
devtools::install_github("jogall/soccermatics")
devtools::install_github('jelagmil/soccergraphR', build_opts = c("--no-resave-data", "--no-manual"))
install.packages("reshape2")
devtools::install_github('jelagmil/soccergraphR', build_opts = c("--no-resave-data", "--no-manual"))
install.packages("reshape2")
install.packages("reshape2", version="1.4.4")
install.packages("reshape2")
install.packages("C:/Users/italo/Downloads/reshape2_1.4.4.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/italo/Downloads/reshape2_1.4.4.tar.gz", repos = NULL, type = "source")
sessionInfo()
install.packages("C:/Users/italo/Downloads/reshape2_1.4.4.tar.gz", repos = NULL, type = "source")
install.packages("RSQLite")
library(RSQLite)
library(dplyr)
con <- dbConnect(SQLite(), dbname=paste0(getwd(),"/Futbol Analitycs/DataBase/database.sqlite"))
con <- dbConnect(SQLite(), dbname=paste0(getwd(),"/DataBase/database.sqlite"))
library(soccergraphR)
OptaXMLstats(D:\Users\Italo\Documents\Italo Felipe\Proyectos\Futbol Analitycs\2020\ANFP\Partidos\Huachipato vs Audax Italiano.xml)
OptaXMLstats(D:\Users\Italo\Documents\Italo Felipe\Proyectos\Futbol Analitycs\2020\ANFP\Partidos\HuachipatovsAudaxItaliano.xml)
OptaXMLstats("D:\Users\Italo\Documents\Italo Felipe\Proyectos\Futbol Analitycs\2020\ANFP\Partidos\HuachipatovsAudaxItaliano.xml")
OptaXMLstats("D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/ANFP/Partidos/HuachipatovsAudaxItaliano.xml")
OptaXMLstats(D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/ANFP/Partidos/HuachipatovsAudaxItaliano.xml)
OptaXMLstats(<D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/ANFP/Partidos/HuachipatovsAudaxItaliano.xml>)
OptaXMLstats('D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/ANFP/Partidos/HuachipatovsAudaxItaliano.xml')
ruta_stats< -c('D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/2020/ANFP/Partidos/HuachipatovsAudaxItaliano.xml')
df< -OptaXMLstats(ruta_stats)
df< -OptaXMLeventos(ruta_stats)
ruta_stats< -c('D:/Users/Italo/Documents/Italo Felipe/Proyectos/Futbol Analitycs/SoccergraphR-Data/data/f24.xml')
df<-OptaXMLeventos(ruta_stats)
q()
q()
densidades <- ggplot(data.frame(x = -1:20)) +
geom_point(aes(x = x, y = dpois(x, lambda = 4), color = "lambda=4"), show.legend = FALSE) +
geom_path(aes(x = x, y = dpois(x, lambda = 4), color = "lambda=4"),
alpha = 0.6, linetype = "dashed", show.legend = FALSE) +
geom_point(aes(x = x, y = dpois(x, lambda = 10), color = "lambda=10"), show.legend = FALSE) +
geom_path(aes(x = x, y = dpois(x, lambda = 10), color = "lambda=10"),
alpha = 0.6, linetype = "dashed", show.legend = FALSE) +
labs(color = "", y = "", title = "Distribución Poisson")
install.packages(ggplot)
densidades <- ggplot2(data.frame(x = -1:20)) +
geom_point(aes(x = x, y = dpois(x, lambda = 4), color = "lambda=4"), show.legend = FALSE) +
geom_path(aes(x = x, y = dpois(x, lambda = 4), color = "lambda=4"),
alpha = 0.6, linetype = "dashed", show.legend = FALSE) +
geom_point(aes(x = x, y = dpois(x, lambda = 10), color = "lambda=10"), show.legend = FALSE) +
geom_path(aes(x = x, y = dpois(x, lambda = 10), color = "lambda=10"),
alpha = 0.6, linetype = "dashed", show.legend = FALSE) +
labs(color = "", y = "", title = "Distribución Poisson")
install.packages("plotly")
install.packages(tourr)
install.packages(c("plotly", "tourr"))
list.files()
list.files()
##
## paso 1: Seleccionar torneo 2019
setwd("C:/Users/italo/Dropbox/soccer analytics/data/Torneo 2019")
fechas = list.files()
partidoi = read_json(paste0(getwd(),"/", partidos[i]))
